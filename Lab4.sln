using System;
using System.Collections.G﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio Version 17
VisualStudioVersion = 17.7.34024.191
MinimumVisualStudioVersion = 10.0.40219.1
Project("{9A19103F-16F7-4668-BE54-9A1E7A4F7556}") = "EcoSystem", "FourthLab\EcoSystem.csproj", "{BB0101B8-029E-4772-AF70-63B0B820DA30}"
EndProject
Project("{2150E333-8FDC-42A3-9474-1A3956D46DE8}") = "Solution Items", "Solution Items", "{2DED6B22-A21A-4A82-B878-42B08591356A}"
	ProjectSection(SolutionItems) = preProject
		Instruction.txt = Instruction.txt
	EndProjectSection
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "Network", "Network\Network.csproj", "{50FF60BB-1FD7-4E17-A6CE-9B9C5D00D255}"
EndProject
Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "CityTraffic", "CityTraffic\CityTraffic.csproj", "{074D65BB-045E-4FA3-83DD-A13AC6B0B228}"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|Any CPU = Debug|Any CPU
		Release|Any CPU = Release|Any CPU
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{BB0101B8-029E-4772-AF70-63B0B820DA30}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{BB0101B8-029E-4772-AF70-63B0B820DA30}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{BB0101B8-029E-4772-AF70-63B0B820DA30}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{BB0101B8-029E-4772-AF70-63B0B820DA30}.Release|Any CPU.Build.0 = Release|Any CPU
		{50FF60BB-1FD7-4E17-A6CE-9B9C5D00D255}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{50FF60BB-1FD7-4E17-A6CE-9B9C5D00D255}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{50FF60BB-1FD7-4E17-A6CE-9B9C5D00D255}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{50FF60BB-1FD7-4E17-A6CE-9B9C5D00D255}.Release|Any CPU.Build.0 = Release|Any CPU
		{074D65BB-045E-4FA3-83DD-A13AC6B0B228}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
		{074D65BB-045E-4FA3-83DD-A13AC6B0B228}.Debug|Any CPU.Build.0 = Debug|Any CPU
		{074D65BB-045E-4FA3-83DD-A13AC6B0B228}.Release|Any CPU.ActiveCfg = Release|Any CPU
		{074D65BB-045E-4FA3-83DD-A13AC6B0B228}.Release|Any CPU.Build.0 = Release|Any CPU
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {31FAA27E-655D-4978-8F43-8A7F613A23A6}
	EndGlobalSection
EndGlobaleneric;

// Базовий клас Живий організм
public class LivingOrganism
{
    public int Energy { get; set; }
    public int Age { get; set; }
    public int Size { get; set; }

    public LivingOrganism(int energy, int age, int size)
    {
        Energy = energy;
        Age = age;
        Size = size;
    }
}

// Інтерфейс для розмноження
public interface IReproducible
{
    void Reproduce();
}

// Інтерфейс для полювання
public interface IPredator
{
    void Hunt(LivingOrganism prey);
}

// Клас Тварина
public class Animal : LivingOrganism, IReproducible, IPredator
{
    public string Species { get; set; }

    public Animal(int energy, int age, int size, string species)
        : base(energy, age, size)
    {
        Species = species;
    }

    public void Reproduce()
    {
        Console.WriteLine($"{Species} is reproducing.");
    }

    public void Hunt(LivingOrganism prey)
    {
        Console.WriteLine($"{Species} is hunting.");
        // Логіка полювання тут
    }
}

// Клас Рослина
public class Plant : LivingOrganism, IReproducible
{
    public string Type { get; set; }

    public Plant(int energy, int age, int size, string type)
        : base(energy, age, size)
    {
        Type = type;
    }

    public void Reproduce()
    {
        Console.WriteLine($"{Type} plant is reproducing.");
    }
}

// Клас Мікроорганізм
public class Microorganism : LivingOrganism, IReproducible
{
    public string Strain { get; set; }

    public Microorganism(int energy, int age, int size, string strain)
        : base(energy, age, size)
    {
        Strain = strain;
    }

    public void Reproduce()
    {
        Console.WriteLine($"{Strain} microorganism is reproducing.");
    }
}

// Клас Екосистема
public class Ecosystem
{
    private List<LivingOrganism> organisms;

    public Ecosystem()
    {
        organisms = new List<LivingOrganism>();
    }

    public void AddOrganism(LivingOrganism organism)
    {
        organisms.Add(organism);
    }

    public void SimulateInteraction()
    {
        // Логіка взаємодії між організмами (харчування, розмноження, конкуренція) тут
    }
}

class Program
{
    static void Main()
    {
        // Приклад використання
        Animal lion = new Animal(100, 5, 10, "Lion");
        Plant oak = new Plant(50, 10, 5, "Oak");
        Microorganism bacteria = new Microorganism(10, 1, 1, "E. coli");

        Ecosystem ecosystem = new Ecosystem();
        ecosystem.AddOrganism(lion);
        ecosystem.AddOrganism(oak);
        ecosystem.AddOrganism(bacteria);

        ecosystem.SimulateInteraction();
    }
}
